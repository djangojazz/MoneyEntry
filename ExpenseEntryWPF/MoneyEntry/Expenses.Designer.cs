//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ExpensesModel", "FK_Transaction_Person", "tePerson", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MoneyEntry.tePerson), "teTransaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MoneyEntry.teTransaction))]

#endregion

namespace MoneyEntry
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ExpensesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ExpensesEntities object using the connection string found in the 'ExpensesEntities' section of the application configuration file.
        /// </summary>
        public ExpensesEntities() : base("name=ExpensesEntities", "ExpensesEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ExpensesEntities object.
        /// </summary>
        public ExpensesEntities(string connectionString) : base(connectionString, "ExpensesEntities")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ExpensesEntities object.
        /// </summary>
        public ExpensesEntities(EntityConnection connection) : base(connection, "ExpensesEntities")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tdCategory> tdCategories
        {
            get
            {
                if ((_tdCategories == null))
                {
                    _tdCategories = base.CreateObjectSet<tdCategory>("tdCategories");
                }
                return _tdCategories;
            }
        }
        private ObjectSet<tdCategory> _tdCategories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tdType> tdTypes
        {
            get
            {
                if ((_tdTypes == null))
                {
                    _tdTypes = base.CreateObjectSet<tdType>("tdTypes");
                }
                return _tdTypes;
            }
        }
        private ObjectSet<tdType> _tdTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tePerson> tePersons
        {
            get
            {
                if ((_tePersons == null))
                {
                    _tePersons = base.CreateObjectSet<tePerson>("tePersons");
                }
                return _tePersons;
            }
        }
        private ObjectSet<tePerson> _tePersons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<teTransaction> teTransactions
        {
            get
            {
                if ((_teTransactions == null))
                {
                    _teTransactions = base.CreateObjectSet<teTransaction>("teTransactions");
                }
                return _teTransactions;
            }
        }
        private ObjectSet<teTransaction> _teTransactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vTran> vTrans
        {
            get
            {
                if ((_vTrans == null))
                {
                    _vTrans = base.CreateObjectSet<vTran>("vTrans");
                }
                return _vTrans;
            }
        }
        private ObjectSet<vTran> _vTrans;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tdCategories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotdCategories(tdCategory tdCategory)
        {
            base.AddObject("tdCategories", tdCategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tdTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotdTypes(tdType tdType)
        {
            base.AddObject("tdTypes", tdType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tePersons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotePersons(tePerson tePerson)
        {
            base.AddObject("tePersons", tePerson);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the teTransactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToteTransactions(teTransaction teTransaction)
        {
            base.AddObject("teTransactions", teTransaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vTrans EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovTrans(vTran vTran)
        {
            base.AddObject("vTrans", vTran);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="amount">No Metadata Documentation available.</param>
        /// <param name="description">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="category">No Metadata Documentation available.</param>
        /// <param name="created">No Metadata Documentation available.</param>
        /// <param name="personID">No Metadata Documentation available.</param>
        public int spMoneyEntry(Nullable<global::System.Decimal> amount, global::System.String description, global::System.String type, global::System.String category, Nullable<global::System.DateTime> created, Nullable<global::System.Int32> personID)
        {
            ObjectParameter amountParameter;
            if (amount.HasValue)
            {
                amountParameter = new ObjectParameter("Amount", amount);
            }
            else
            {
                amountParameter = new ObjectParameter("Amount", typeof(global::System.Decimal));
            }
    
            ObjectParameter descriptionParameter;
            if (description != null)
            {
                descriptionParameter = new ObjectParameter("Description", description);
            }
            else
            {
                descriptionParameter = new ObjectParameter("Description", typeof(global::System.String));
            }
    
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("Type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("Type", typeof(global::System.String));
            }
    
            ObjectParameter categoryParameter;
            if (category != null)
            {
                categoryParameter = new ObjectParameter("Category", category);
            }
            else
            {
                categoryParameter = new ObjectParameter("Category", typeof(global::System.String));
            }
    
            ObjectParameter createdParameter;
            if (created.HasValue)
            {
                createdParameter = new ObjectParameter("Created", created);
            }
            else
            {
                createdParameter = new ObjectParameter("Created", typeof(global::System.DateTime));
            }
    
            ObjectParameter personIDParameter;
            if (personID.HasValue)
            {
                personIDParameter = new ObjectParameter("PersonID", personID);
            }
            else
            {
                personIDParameter = new ObjectParameter("PersonID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("spMoneyEntry", amountParameter, descriptionParameter, typeParameter, categoryParameter, createdParameter, personIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int spUpdateRunningTotals()
        {
            return base.ExecuteFunction("spUpdateRunningTotals");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int spUpdateTotals()
        {
            return base.ExecuteFunction("spUpdateTotals");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="transactionID">No Metadata Documentation available.</param>
        /// <param name="amount">No Metadata Documentation available.</param>
        /// <param name="transactionDesc">No Metadata Documentation available.</param>
        /// <param name="type">No Metadata Documentation available.</param>
        /// <param name="category">No Metadata Documentation available.</param>
        /// <param name="createdDate">No Metadata Documentation available.</param>
        /// <param name="reconciled">No Metadata Documentation available.</param>
        /// <param name="person">No Metadata Documentation available.</param>
        public int spMoneyUpdate(Nullable<global::System.Int32> transactionID, Nullable<global::System.Decimal> amount, global::System.String transactionDesc, global::System.String type, global::System.String category, Nullable<global::System.DateTime> createdDate, Nullable<global::System.Boolean> reconciled, global::System.String person)
        {
            ObjectParameter transactionIDParameter;
            if (transactionID.HasValue)
            {
                transactionIDParameter = new ObjectParameter("TransactionID", transactionID);
            }
            else
            {
                transactionIDParameter = new ObjectParameter("TransactionID", typeof(global::System.Int32));
            }
    
            ObjectParameter amountParameter;
            if (amount.HasValue)
            {
                amountParameter = new ObjectParameter("Amount", amount);
            }
            else
            {
                amountParameter = new ObjectParameter("Amount", typeof(global::System.Decimal));
            }
    
            ObjectParameter transactionDescParameter;
            if (transactionDesc != null)
            {
                transactionDescParameter = new ObjectParameter("TransactionDesc", transactionDesc);
            }
            else
            {
                transactionDescParameter = new ObjectParameter("TransactionDesc", typeof(global::System.String));
            }
    
            ObjectParameter typeParameter;
            if (type != null)
            {
                typeParameter = new ObjectParameter("Type", type);
            }
            else
            {
                typeParameter = new ObjectParameter("Type", typeof(global::System.String));
            }
    
            ObjectParameter categoryParameter;
            if (category != null)
            {
                categoryParameter = new ObjectParameter("Category", category);
            }
            else
            {
                categoryParameter = new ObjectParameter("Category", typeof(global::System.String));
            }
    
            ObjectParameter createdDateParameter;
            if (createdDate.HasValue)
            {
                createdDateParameter = new ObjectParameter("CreatedDate", createdDate);
            }
            else
            {
                createdDateParameter = new ObjectParameter("CreatedDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter reconciledParameter;
            if (reconciled.HasValue)
            {
                reconciledParameter = new ObjectParameter("Reconciled", reconciled);
            }
            else
            {
                reconciledParameter = new ObjectParameter("Reconciled", typeof(global::System.Boolean));
            }
    
            ObjectParameter personParameter;
            if (person != null)
            {
                personParameter = new ObjectParameter("Person", person);
            }
            else
            {
                personParameter = new ObjectParameter("Person", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("spMoneyUpdate", transactionIDParameter, amountParameter, transactionDescParameter, typeParameter, categoryParameter, createdDateParameter, reconciledParameter, personParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpensesModel", Name="tdCategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tdCategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tdCategory object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static tdCategory CreatetdCategory(global::System.Byte categoryID)
        {
            tdCategory tdCategory = new tdCategory();
            tdCategory.CategoryID = categoryID;
            return tdCategory;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.Byte _CategoryID;
        partial void OnCategoryIDChanging(global::System.Byte value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpensesModel", Name="tdType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tdType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tdType object.
        /// </summary>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        public static tdType CreatetdType(global::System.Byte typeID)
        {
            tdType tdType = new tdType();
            tdType.TypeID = typeID;
            return tdType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                if (_TypeID != value)
                {
                    OnTypeIDChanging(value);
                    ReportPropertyChanging("TypeID");
                    _TypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TypeID");
                    OnTypeIDChanged();
                }
            }
        }
        private global::System.Byte _TypeID;
        partial void OnTypeIDChanging(global::System.Byte value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpensesModel", Name="tePerson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tePerson : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tePerson object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        public static tePerson CreatetePerson(global::System.Int32 personID)
        {
            tePerson tePerson = new tePerson();
            tePerson.PersonID = personID;
            return tePerson;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpensesModel", "FK_Transaction_Person", "teTransaction")]
        public EntityCollection<teTransaction> teTransactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<teTransaction>("ExpensesModel.FK_Transaction_Person", "teTransaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<teTransaction>("ExpensesModel.FK_Transaction_Person", "teTransaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpensesModel", Name="teTransaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class teTransaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new teTransaction object.
        /// </summary>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="transactionDesc">Initial value of the TransactionDesc property.</param>
        /// <param name="typeID">Initial value of the TypeID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static teTransaction CreateteTransaction(global::System.Int32 transactionID, global::System.Decimal amount, global::System.String transactionDesc, global::System.Byte typeID, global::System.Byte categoryID)
        {
            teTransaction teTransaction = new teTransaction();
            teTransaction.TransactionID = transactionID;
            teTransaction.Amount = amount;
            teTransaction.TransactionDesc = transactionDesc;
            teTransaction.TypeID = typeID;
            teTransaction.CategoryID = categoryID;
            return teTransaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                if (_TransactionID != value)
                {
                    OnTransactionIDChanging(value);
                    ReportPropertyChanging("TransactionID");
                    _TransactionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionID");
                    OnTransactionIDChanged();
                }
            }
        }
        private global::System.Int32 _TransactionID;
        partial void OnTransactionIDChanging(global::System.Int32 value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionDesc
        {
            get
            {
                return _TransactionDesc;
            }
            set
            {
                OnTransactionDescChanging(value);
                ReportPropertyChanging("TransactionDesc");
                _TransactionDesc = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TransactionDesc");
                OnTransactionDescChanged();
            }
        }
        private global::System.String _TransactionDesc;
        partial void OnTransactionDescChanging(global::System.String value);
        partial void OnTransactionDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte TypeID
        {
            get
            {
                return _TypeID;
            }
            set
            {
                OnTypeIDChanging(value);
                ReportPropertyChanging("TypeID");
                _TypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeID");
                OnTypeIDChanged();
            }
        }
        private global::System.Byte _TypeID;
        partial void OnTypeIDChanging(global::System.Byte value);
        partial void OnTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.Byte _CategoryID;
        partial void OnCategoryIDChanging(global::System.Byte value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDt
        {
            get
            {
                return _CreatedDt;
            }
            set
            {
                OnCreatedDtChanging(value);
                ReportPropertyChanging("CreatedDt");
                _CreatedDt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDt");
                OnCreatedDtChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDt;
        partial void OnCreatedDtChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ModifiedDt
        {
            get
            {
                return _ModifiedDt;
            }
            set
            {
                OnModifiedDtChanging(value);
                ReportPropertyChanging("ModifiedDt");
                _ModifiedDt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ModifiedDt");
                OnModifiedDtChanged();
            }
        }
        private Nullable<global::System.DateTime> _ModifiedDt;
        partial void OnModifiedDtChanging(Nullable<global::System.DateTime> value);
        partial void OnModifiedDtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> reconciled
        {
            get
            {
                return _reconciled;
            }
            set
            {
                OnreconciledChanging(value);
                ReportPropertyChanging("reconciled");
                _reconciled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("reconciled");
                OnreconciledChanged();
            }
        }
        private Nullable<global::System.Boolean> _reconciled;
        partial void OnreconciledChanging(Nullable<global::System.Boolean> value);
        partial void OnreconciledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RunningTotal
        {
            get
            {
                return _RunningTotal;
            }
            set
            {
                OnRunningTotalChanging(value);
                ReportPropertyChanging("RunningTotal");
                _RunningTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RunningTotal");
                OnRunningTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _RunningTotal;
        partial void OnRunningTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnRunningTotalChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ExpensesModel", "FK_Transaction_Person", "tePerson")]
        public tePerson tePerson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tePerson>("ExpensesModel.FK_Transaction_Person", "tePerson").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tePerson>("ExpensesModel.FK_Transaction_Person", "tePerson").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<tePerson> tePersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<tePerson>("ExpensesModel.FK_Transaction_Person", "tePerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<tePerson>("ExpensesModel.FK_Transaction_Person", "tePerson", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ExpensesModel", Name="vTran")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vTran : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vTran object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        /// <param name="transactionDesc">Initial value of the TransactionDesc property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        public static vTran CreatevTran(global::System.Int32 personID, global::System.Decimal amount, global::System.String transactionDesc, global::System.Int32 transactionID)
        {
            vTran vTran = new vTran();
            vTran.PersonID = personID;
            vTran.Amount = amount;
            vTran.TransactionDesc = transactionDesc;
            vTran.TransactionID = transactionID;
            return vTran;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                if (_Amount != value)
                {
                    OnAmountChanging(value);
                    ReportPropertyChanging("Amount");
                    _Amount = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Amount");
                    OnAmountChanged();
                }
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TransactionDesc
        {
            get
            {
                return _TransactionDesc;
            }
            set
            {
                if (_TransactionDesc != value)
                {
                    OnTransactionDescChanging(value);
                    ReportPropertyChanging("TransactionDesc");
                    _TransactionDesc = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TransactionDesc");
                    OnTransactionDescChanged();
                }
            }
        }
        private global::System.String _TransactionDesc;
        partial void OnTransactionDescChanging(global::System.String value);
        partial void OnTransactionDescChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.String _Type;
        partial void OnTypeChanging(global::System.String value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Category
        {
            get
            {
                return _Category;
            }
            set
            {
                OnCategoryChanging(value);
                ReportPropertyChanging("Category");
                _Category = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Category");
                OnCategoryChanged();
            }
        }
        private global::System.String _Category;
        partial void OnCategoryChanging(global::System.String value);
        partial void OnCategoryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreatedDate
        {
            get
            {
                return _CreatedDate;
            }
            set
            {
                OnCreatedDateChanging(value);
                ReportPropertyChanging("CreatedDate");
                _CreatedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedDate");
                OnCreatedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreatedDate;
        partial void OnCreatedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreatedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                if (_TransactionID != value)
                {
                    OnTransactionIDChanging(value);
                    ReportPropertyChanging("TransactionID");
                    _TransactionID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TransactionID");
                    OnTransactionIDChanged();
                }
            }
        }
        private global::System.Int32 _TransactionID;
        partial void OnTransactionIDChanging(global::System.Int32 value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> RunningTotal
        {
            get
            {
                return _RunningTotal;
            }
            set
            {
                OnRunningTotalChanging(value);
                ReportPropertyChanging("RunningTotal");
                _RunningTotal = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RunningTotal");
                OnRunningTotalChanged();
            }
        }
        private Nullable<global::System.Decimal> _RunningTotal;
        partial void OnRunningTotalChanging(Nullable<global::System.Decimal> value);
        partial void OnRunningTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> reconciled
        {
            get
            {
                return _reconciled;
            }
            set
            {
                OnreconciledChanging(value);
                ReportPropertyChanging("reconciled");
                _reconciled = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("reconciled");
                OnreconciledChanged();
            }
        }
        private Nullable<global::System.Boolean> _reconciled;
        partial void OnreconciledChanging(Nullable<global::System.Boolean> value);
        partial void OnreconciledChanged();

        #endregion

    
    }

    #endregion

    
}
